---
import whiteGithubLogo from "../images/github-white.png"
import blackGithubLogo from "../images/github-black.png"

const {data} = Astro.props
const {name, link, imgSrc, imgAlt, description, features} = data

---
<div class="card-wrapper">  
  <div class="card">
    <h2 class="card-heading">{name}</h2>
    <img class="project-image" src={imgSrc} alt={imgAlt}/>
    <p class="card-description">{description}</p>
    <ul class="feature-list">{features.map(feature => <li>{feature}</li>)}</ul>
    <a href={link} class="github-button"><img class="github-logo" src={whiteGithubLogo}/></a>
    <a href={link} class="github-button hide"><img class="github-logo" src={blackGithubLogo}/></a>
  </div>
</div>
<style>

  .github-logo{
    width: 100%;
  }
  .github-button{
    position: absolute;
    top: 1em;
    left: 1em;
    width: 4em;
    display: none;
  }
  .card-wrapper {
    width: 100%;
    height: 100%;
    background: linear-gradient( 240deg, rgba(var(--main-blue), 1) 5%, rgba(var(--main-purple), 1) 10%, rgba(var(--main-green), 1) 30%, rgba(var(--main-blue), 1) 60%, rgba(var(--main-purple), 1) 70%, rgba(var(--main-green), .8) 80%);
    border-radius: 1em;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 3px;
  }
  
  .card {
    height: 100%;
    width: 100%;
    display: grid;
    grid-template: auto auto auto auto / 1fr;
    align-items: space-around;;
    flex-flow: column nowrap;
    background: var(--background-black);
    border-radius: 1em;
    gap: 1em;
    padding: 1em 0 1em 0;
    align-items: center;
    justify-items: center;
    position: relative;
    cursor: pointer;
  }
  
  .card-heading{
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    height: 100%;
  }
  
  .project-image{
    width: min(85%, 250px);
    aspect-ratio: 1 / .8;
    border-radius: 1em;
  }
  
  .card-description{
    text-indent: 1em;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
  }
  
  .feature-list{
    height: 100%;
    display: flex;
    text-align: start;
    flex-flow: column nowrap;
    justify-content: space-around;
    align-items: center;
    padding-left: 15%;
    display: none;
  }

  .show{
    display: inline;
  }

  .hide{
    display: none;
  }

  @media (max-width: 600px){
    .github-button{
      position: initial;
    }
  }

  @media (prefers-color-scheme: dark){
    .card {
      background: var(--background-black);
    }
  }

  @media (prefers-color-scheme: light){
    .card {
      background: var(--background-white);
    }
  }
</style>
<script>
  const githubButtons = document.querySelectorAll(".github-button")
  const blackGithubButtons = []
  const whiteGithubButtons = [];

  for(let i = 0; i < githubButtons.length; i++)
  if(i % 2 === 0){
    whiteGithubButtons.push(githubButtons[i])
  } else{
    blackGithubButtons.push(githubButtons[i])
  }

  function setColorScheme(scheme) {
    switch(scheme){
      case 'dark':
        displayWhiteLogo()
        break;
      case 'light':
        displayBlackLogo()
        break;
      default:
        break;
    }
  }

  function getPreferredColorScheme() {
    if (window.matchMedia) {
      if(window.matchMedia('(prefers-color-scheme: dark)').matches){
        return 'dark';
      } else {
        return 'light';
      }
    }
    return 'dark';
  }

  function updateColorScheme(){
      setColorScheme(getPreferredColorScheme());
  }

  if(window.matchMedia){
    var colorSchemeQuery = window.matchMedia('(prefers-color-scheme: dark)');
    colorSchemeQuery.addEventListener('change', updateColorScheme);
  }

  updateColorScheme();

  function displayBlackLogo() {
    whiteGithubButtons.forEach(button => {
      button.classList.add("hide")
    })
    blackGithubButtons.forEach(button=> {
      button.classList.remove("hide")
    })
  }

  function displayWhiteLogo() {
    blackGithubButtons.forEach(button => {
      button.classList.add("hide")
    })
    whiteGithubButtons.forEach(button=> {
      button.classList.remove("hide")
    })
  }
</script>