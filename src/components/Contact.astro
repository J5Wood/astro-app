---
import ContactCard from "./ContactCard.astro";
import ghWhite from "../images/github-white.png"
import mediumWhite from "../images/medium-white.png"
import liWhite from "../images/li-white.png"
import mailWhite from "../images/mail-white.png"
import ghBlack from "../images/github-black.png"
import mediumBlack from "../images/medium-black.png"
import liBlack from "../images/li-black.png"
import mailBlack from "../images/mail-black.png"

const ghLink = "https://github.com/J5Wood"
const liLink = "https://www.linkedin.com/in/jeremyw00d"
const mediumLink = "http://jwood206.medium.com/"
const mailLink = "mailto:js.wood206@gmail.com"
---

<div id="contact-section" class="contacts-container">
  <div class="outer-header-wrapper">
    <div class="inner-header-wrapper">
      <h2 class="contact-header">Contact Me</h2>
    </div>
  </div>
  <div class="contact-card-wrapper">
    <ContactCard image={liWhite} link={liLink}/>
  </div>
  <div class="contact-card-wrapper">
    <ContactCard image={ghWhite} link={ghLink}/>
  </div>
  <div class="contact-card-wrapper">
    <ContactCard image={mediumWhite} link={mediumLink}/>
  </div>
  <div class="contact-card-wrapper">
    <ContactCard image={mailWhite} link={mailLink}/>
  </div>
  <div class="contact-card-wrapper hide">
    <ContactCard image={liBlack} link={liLink}/>
  </div>
  <div class="contact-card-wrapper hide">
    <ContactCard image={ghBlack} link={ghLink}/>
  </div>
  <div class="contact-card-wrapper hide">
    <ContactCard image={mediumBlack} link={mediumLink}/>
  </div>
  <div class="contact-card-wrapper hide">
    <ContactCard image={mailBlack} link={mailLink}/>
  </div>
</div>
<style>
  .contacts-container {
    height: 70vh;
    display: grid;
    grid-template:  14% 28% 56% 2%/ 1fr 1fr 1fr 1fr;
    justify-items: center;
    align-items: center;
  }
  
  .outer-header-wrapper{
    grid-column: 1 / 5;
    grid-row: 2 / 3;
    display: flex;
    justify-content: center;
    align-items: center;
    transform: rotateY(180deg);
    backface-visibility: hidden;
    transition: all .7s ease-in; 
    background: radial-gradient(ellipse farthest-corner at 0% 0%, rgba(0, 236, 181, 0.9) 15%, rgba(16, 0, 236, 0.2) 25%, rgba(0, 236, 181, 0.75) 50%, rgba(16, 0, 236, 1) 69%, rgba(169, 87, 241, .8) 72%, rgba(16, 0, 236, 0.6) 80%, rgba(0, 236, 181, 1) 95%);
    width: 100%;
    height: 4em;
  }
  
  .inner-header-wrapper {
    width: 100%;
    height: 90%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--main-background);
    backface-visibility: hidden;
  }

  .contact-header{
    transform: rotateY(180deg);
    backface-visibility: hidden;
    transition: all .8s ease-in;
  }
  
  .contact-card-wrapper {
    width: 100%;
    height: 100%;
    grid-row: 3 / 4;
    display: flex;
    justify-content: center;
    align-items: center;
    transform: rotateY(180deg);
    transition: all 1.2s ease-out;
    backface-visibility: hidden;
  }

  .pop-in {
    transform: rotateY(0deg);
  }

  .pop-first {
    transition-delay: 0.2s;
  }

  .pop-second {
    transition-delay: 0.4s;
  }

  .pop-third {
    transition-delay: 0.6s;
  }

  .pop-fourth {
    transition-delay: 0.8s;
  }

  .hide {
    display: none;
  }
</style>
<script>
  const logos = document.querySelectorAll(".contact-card-wrapper")
  let blackLogos = []
  let whiteLogos = []
  for(let i = 0; i < logos.length; i++){
    if(i < 4){
      whiteLogos.push(logos[i])
    } else {
      blackLogos.push(logos[i])
    }
  }

  function setColorScheme(scheme) {
    switch(scheme){
      case 'dark':
        displayWhiteLogos()
        break;
      case 'light':
        displayBlackLogos()
        break;
      default:
        break;
    }
  }

  function getPreferredColorScheme() {
    if (window.matchMedia) {
      if(window.matchMedia('(prefers-color-scheme: dark)').matches){
        return 'dark';
      } else {
        return 'light';
      }
    }
    return 'dark';
  }

  function updateColorScheme(){
      setColorScheme(getPreferredColorScheme());
  }

  if(window.matchMedia){
    const colorSchemeQuery = window.matchMedia('(prefers-color-scheme: dark)');
    colorSchemeQuery.addEventListener('change', updateColorScheme);
  }

  updateColorScheme();

  function displayBlackLogos() {
    whiteLogos.forEach(logo => {
      logo.classList.add("hide")
    })
    blackLogos.forEach(logo => {
      logo.classList.remove("hide")
    })
  }

  function displayWhiteLogos() {
    blackLogos.forEach(logo => {
      logo.classList.add("hide")
    })
    whiteLogos.forEach(logo=> {
      logo.classList.remove("hide")
    })
  }

  const contactsContainer = document.querySelector(".contacts-container")
  const contactElements = contactsContainer.children;
  const contactsPos = contactsContainer.offsetTop;
  
  function animateIn() {
    let midpoint = window.scrollY + (window.innerHeight / 2)
    if (contactsPos < midpoint) {
      contactElements[0].classList.add("pop-in");
      contactElements[0].children[0].children[0].classList.add("pop-in");
      contactElements[1].classList.add("pop-in", "pop-first");
      contactElements[2].classList.add("pop-in", "pop-second");
      contactElements[3].classList.add("pop-in", "pop-third");
      contactElements[4].classList.add("pop-in", "pop-fourth");
      contactElements[5].classList.add("pop-in", "pop-first");
      contactElements[6].classList.add("pop-in", "pop-second");
      contactElements[7].classList.add("pop-in", "pop-third");
      contactElements[8].classList.add("pop-in", "pop-fourth");
    }
  }

  window.addEventListener("onLoad", animateIn);
  window.addEventListener("scroll", animateIn);

  const lightSwitch = document.getElementById("switch")
  if(window.matchMedia('(prefers-color-scheme: light)').matches){
    displayBlackLogos()
  }

  function changeLogos(e){
    if(e.target.checked){
      displayBlackLogos()
    } else {
      displayWhiteLogos() 
    }
  }

  lightSwitch.addEventListener("click", changeLogos)
</script>
