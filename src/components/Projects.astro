---
import ProjectCard from "./ProjectCard.astro";
import {picSure, flavorTown, coffeeTalk} from "./ProjectData";
---

<div  id="project-section"  class="projects-container">
  <div class="outer-header-wrapper">
    <div class="inner-header-wrapper">
      <h2 class="project-header">Projects</h2>
    </div>
  </div>
  <div class="project-wrapper "><ProjectCard data={coffeeTalk}/></div>
  <div class="project-wrapper card-two"><ProjectCard data={flavorTown}/></div>
  <div class="project-wrapper card-three"><ProjectCard data={picSure}/></div>
</div>
<style>
  .projects-container {
    min-height: 80vh;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 12em auto;
    align-items: center;
    justify-items: center;
    overflow: hidden;
    z-index: 1;
  }

  .outer-header-wrapper{
    grid-column: 1/4;
    opacity: 0;
    transition: opacity 0.4s ease-out;
    background: linear-gradient(
    90deg,
    rgba(169, 87, 241, 1) 1%,
    rgba(16, 0, 236, 1) 3%,
    rgba(0, 236, 181, 1) 7%,
    rgba(169, 87, 241, 1) 12%,
    rgba(0, 236, 181, 1) 16%,
    rgba(169, 87, 241, 1) 21%,
    rgba(16, 0, 236, 1) 24%,
    rgba(169, 87, 241, 1) 26%,
    rgba(0, 236, 181, 1) 75%,
    rgba(16, 0, 236, 1) 78%,
    rgba(0, 236, 181, 1) 81%,
    rgba(169, 87, 241, 1) 90%,
    rgba(16, 0, 236, 1) 92%,
    rgba(0, 236, 181, 1) 95%,
    rgba(169, 87, 241, 1) 100%
  );
    width: 10em;
    height: 3em;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .inner-header-wrapper{
    background-color: #13151a;
    width: 92%;
    height: 105%;
    display: flex;
    justify-content: center;
    align-items: center;
    clip-path: polygon(0% 10%, 10% 10%, 10% 0%, 90% 0%, 90% 10%, 100% 10%, 100% 90%, 90% 90%, 90% 100%, 10% 100%, 10% 90%, 0% 90%);
    text-align: center;
  }

  .project-wrapper {
    width: 80%;
    height: 20em;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.4s ease-out 0.4s, position 1s ease-in;
    grid-column: 1 / 2;
  }

  .card-two {
    transition-delay: 0.6s;
    grid-column: 2 / 3;
  }

  .card-three {
    transition-delay: 0.8s;
    grid-column: 3 / 4;
  }

  .pop-in {
    opacity: 1;
  }

  .enlarge{
    position: fixed;
    top: 10%;
    max-width: 60%;
    background-color: black;
    border-radius: 1em;
    height: max-content;
    z-index: 2;
  }

  .enlarge::before{
    content: '';
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgb(0,0,0,.4);
    z-index: -1;
  }

  .enlarge::after{
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    animation: provide-fade .3s ease-out .02s forwards;
    z-index: 2;
    margin: -1px;
    background: var(--background-black);
    border: 1px solid var(--background-black);
    border-radius: 1em;
  }

  @keyframes provide-fade {
    0%{
      opacity: 1;
      background: black;
    }
    100% {
      opacity: 0;
      display: none;
    }
  }

  @media (max-width: 450px){
    .projects-container {
    grid-template-columns: 1fr;
    grid-template-rows: 12em auto auto auto;
    gap: 1em;
  }

  .outer-header-wrapper{
    grid-column: 1/2;
  }

  .project-wrapper {
    grid-column: 1 / 2;
  }

  .card-two {
    transition-delay: 0.6s;
    grid-column: 1 / 2;
  }

  .card-three {
    transition-delay: 0.8s;
    grid-column: 1 / 2;
  }

  }
  
</style>
<script>
  const projectsContainer = document.querySelector(".projects-container")
  const projectPosition = projectsContainer.offsetTop
  const projectElements = projectsContainer.children

  function animateIn() {
    const midpoint = window.scrollY + (window.innerHeight / 2)
    if (projectPosition < midpoint) {
      projectElements[0].classList.add("pop-in");
      projectElements[1].classList.add("pop-in");
      projectElements[2].classList.add("pop-in");
      projectElements[3].classList.add("pop-in");
    }
  }

  window.addEventListener("onLoad", animateIn);
  window.addEventListener("scroll", animateIn);

  const projectCards = [projectElements[1], projectElements[2], projectElements[3]]
  projectCards.forEach(card => card.addEventListener("click", (e) => expandContractCard(e)))

function expandContractCard(e){
  const githubButton = e.currentTarget.children[0].children[0].children[4]
  const featureList = e.currentTarget.children[0].children[0].children[3]
  if(e.currentTarget.classList.contains("enlarge")){
    featureList.classList.remove("show")
    e.currentTarget.classList.remove("enlarge")
    githubButton.classList.remove("show")
  } else {
    e.currentTarget.classList.add("enlarge")
    featureList.classList.add("show")
    githubButton.classList.add("show")
  }
}
</script>
